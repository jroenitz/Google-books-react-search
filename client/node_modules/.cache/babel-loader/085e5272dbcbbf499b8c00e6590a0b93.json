{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  // Gets all books\n  getBooks: function getBooks() {\n    return axios.get(\"/api/books\");\n  },\n  // Gets the book with the given id\n  getBook: function getBook(id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function deleteBook(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function saveBook(bookData) {\n    return axios.post(\"/api/books\", bookData);\n  },\n  getBooksByQuery: function getBooksByQuery(query) {\n    var queryUrl = \"https://www.googleapis.com/books/v1/volumes?q-\" + query + \"&key=AIzaSyBpItw0_3uYZZlc5LWDefKR3DRsVrXFccA\";\n    return new Promise(function (resolve, reject) {\n      axios.get(queryUrl).then(function (res) {\n        var books = res.data.items;\n        var results = books.map(function (book) {\n          return {\n            title: book.volumeInfo.title,\n            authers: book.volumeInfo.authers,\n            description: book.volumeInfo.description,\n            image: book.volumeInfo.ImageLinks.thumbnail,\n            link: book.volumeInfo.infoLink\n          };\n        });\n        resolve(results);\n      }).catch(function (err) {\n        return reject(err);\n      });\n    });\n  }\n};","map":{"version":3,"sources":["/Users/Jordan/Desktop/School/Google-books-react-search/client/src/utils/API.js"],"names":["axios","getBooks","get","getBook","id","deleteBook","delete","saveBook","bookData","post","getBooksByQuery","query","queryUrl","Promise","resolve","reject","then","res","books","data","items","results","map","book","title","volumeInfo","authers","description","image","ImageLinks","thumbnail","link","infoLink","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACb;AACAC,EAAAA,QAAQ,EAAE,oBAAY;AACpB,WAAOD,KAAK,CAACE,GAAN,CAAU,YAAV,CAAP;AACD,GAJY;AAKb;AACAC,EAAAA,OAAO,EAAE,iBAAUC,EAAV,EAAc;AACrB,WAAOJ,KAAK,CAACE,GAAN,CAAU,gBAAgBE,EAA1B,CAAP;AACD,GARY;AASb;AACAC,EAAAA,UAAU,EAAE,oBAAUD,EAAV,EAAc;AACxB,WAAOJ,KAAK,CAACM,MAAN,CAAa,gBAAgBF,EAA7B,CAAP;AACD,GAZY;AAab;AACAG,EAAAA,QAAQ,EAAE,kBAAUC,QAAV,EAAoB;AAC5B,WAAOR,KAAK,CAACS,IAAN,CAAW,YAAX,EAAyBD,QAAzB,CAAP;AACD,GAhBY;AAkBfE,EAAAA,eAAe,EAAE,yBAAUC,KAAV,EAAiB;AAC9B,QAAIC,QAAQ,GAAG,mDAAmDD,KAAnD,GAA2D,8CAA1E;AACA,WAAO,IAAIE,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCf,MAAAA,KAAK,CACFE,GADH,CACOU,QADP,EAEGI,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACX,YAAMC,KAAK,GAAGD,GAAG,CAACE,IAAJ,CAASC,KAAvB;AACA,YAAMC,OAAO,GAAGH,KAAK,CAACI,GAAN,CAAU,UAAAC,IAAI,EAAI;AAChC,iBAAO;AACLC,YAAAA,KAAK,EAAED,IAAI,CAACE,UAAL,CAAgBD,KADlB;AAELE,YAAAA,OAAO,EAAEH,IAAI,CAACE,UAAL,CAAgBC,OAFpB;AAGLC,YAAAA,WAAW,EAAEJ,IAAI,CAACE,UAAL,CAAgBE,WAHxB;AAILC,YAAAA,KAAK,EAAEL,IAAI,CAACE,UAAL,CAAgBI,UAAhB,CAA2BC,SAJ7B;AAKLC,YAAAA,IAAI,EAAER,IAAI,CAACE,UAAL,CAAgBO;AALjB,WAAP;AAOD,SARe,CAAhB;AASAlB,QAAAA,OAAO,CAACO,OAAD,CAAP;AACD,OAdH,EAeGY,KAfH,CAeS,UAAAC,GAAG;AAAA,eAAInB,MAAM,CAACmB,GAAD,CAAV;AAAA,OAfZ;AAgBD,KAjBM,CAAP;AAkBD;AAtCY,CAAf","sourcesContent":["import axios from \"axios\";\n\nexport default {\n  // Gets all books\n  getBooks: function () {\n    return axios.get(\"/api/books\");\n  },\n  // Gets the book with the given id\n  getBook: function (id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function (id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function (bookData) {\n    return axios.post(\"/api/books\", bookData);\n  },\n\ngetBooksByQuery: function (query) {\n    let queryUrl = \"https://www.googleapis.com/books/v1/volumes?q-\" + query + \"&key=AIzaSyBpItw0_3uYZZlc5LWDefKR3DRsVrXFccA\"\n    return new Promise((resolve, reject) => {\n      axios\n        .get(queryUrl)\n        .then(res => {\n          const books = res.data.items;\n          const results = books.map(book => {\n            return {\n              title: book.volumeInfo.title,\n              authers: book.volumeInfo.authers,\n              description: book.volumeInfo.description,\n              image: book.volumeInfo.ImageLinks.thumbnail,\n              link: book.volumeInfo.infoLink\n            };\n          });\n          resolve(results);\n        })\n        .catch(err => reject(err));\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}